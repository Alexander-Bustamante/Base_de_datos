-- MySQL Script generated by MySQL Workbench
-- Thu Mar  6 10:12:30 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`tipo_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tipo_usuario` (
  `id_tipo_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo_usuario` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(100) NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`id_tipo_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`personas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`personas` (
  `RUT` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `fecha_nac` DATE NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`RUT`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`usuarios` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `created` DATETIME NOT NULL,
  `id_tipo_usuario` INT NOT NULL,
  `RUT` INT NOT NULL,
  PRIMARY KEY (`id_usuario`, `id_tipo_usuario`, `RUT`),
  CONSTRAINT `fk_usuarios_tipo_usuario`
    FOREIGN KEY (`id_tipo_usuario`)
    REFERENCES `mydb`.`tipo_usuario` (`id_tipo_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_personas1`
    FOREIGN KEY (`RUT`)
    REFERENCES `mydb`.`personas` (`RUT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_usuarios_tipo_usuario_idx` ON `mydb`.`usuarios` (`id_tipo_usuario` ASC) VISIBLE;

CREATE INDEX `fk_usuarios_personas1_idx` ON `mydb`.`usuarios` (`RUT` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`citas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`citas` (
  `id_citas` INT NOT NULL AUTO_INCREMENT,
  `fecha_cita` DATETIME NOT NULL,
  `estado_cita` VARCHAR(45) NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`id_citas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`citas_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`citas_usuarios` (
  `id_citas` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`id_citas`, `id_usuario`),
  CONSTRAINT `fk_citas_has_usuarios_citas1`
    FOREIGN KEY (`id_citas`)
    REFERENCES `mydb`.`citas` (`id_citas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_citas_has_usuarios_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `mydb`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_citas_has_usuarios_usuarios1_idx` ON `mydb`.`citas_usuarios` (`id_usuario` ASC) VISIBLE;

CREATE INDEX `fk_citas_has_usuarios_citas1_idx` ON `mydb`.`citas_usuarios` (`id_citas` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`tipo_tratamiento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tipo_tratamiento` (
  `id_tipo_tratamiento` INT NOT NULL,
  `nombre_tipo_tratamiento` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(100) NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`id_tipo_tratamiento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tratamiento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tratamiento` (
  `id_tratamiento` INT NOT NULL,
  `fecha_tratamiento` DATETIME NOT NULL,
  `created` DATETIME NOT NULL,
  `id_tipo_tratamiento` INT NOT NULL,
  PRIMARY KEY (`id_tratamiento`, `id_tipo_tratamiento`),
  CONSTRAINT `fk_tratamiento_tipo_tratamiento1`
    FOREIGN KEY (`id_tipo_tratamiento`)
    REFERENCES `mydb`.`tipo_tratamiento` (`id_tipo_tratamiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tratamiento_tipo_tratamiento1_idx` ON `mydb`.`tratamiento` (`id_tipo_tratamiento` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`consulta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`consulta` (
  `id_consulta` INT NOT NULL,
  `motivo` VARCHAR(45) NOT NULL,
  `diagnostico` VARCHAR(45) NOT NULL,
  `fecha` DATETIME NOT NULL,
  `created` DATETIME NOT NULL,
  `id_tratamiento` INT NOT NULL,
  `id_citas` INT NOT NULL,
  PRIMARY KEY (`id_consulta`, `id_tratamiento`, `id_citas`),
  CONSTRAINT `fk_consulta_tratamiento1`
    FOREIGN KEY (`id_tratamiento`)
    REFERENCES `mydb`.`tratamiento` (`id_tratamiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_consulta_citas1`
    FOREIGN KEY (`id_citas`)
    REFERENCES `mydb`.`citas` (`id_citas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_consulta_tratamiento1_idx` ON `mydb`.`consulta` (`id_tratamiento` ASC) VISIBLE;

CREATE INDEX `fk_consulta_citas1_idx` ON `mydb`.`consulta` (`id_citas` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- -----------------------------------------------------
-- Inserciones
-- -----------------------------------------------------

-- Crear tipos de usuario
INSERT INTO `mydb`.`tipo_usuario` (`nombre_tipo_usuario`, `descripcion`, `created`)
VALUES 
('Paciente', 'Usuario que solicita consultas médicas', NOW()),
('Médico', 'Usuario que atiende consultas médicas', NOW()),
('Administrativo', 'Usuario que gestiona citas y consultas', NOW()),
('Enfermero', 'Usuario que brinda cuidados médicos', NOW()),
('Técnico', 'Usuario que realiza procedimientos técnicos', NOW());

-- Crear personas (pacientes, médicos, administrativos, etc.)
INSERT INTO `mydb`.`personas` (`RUT`, `nombre`, `apellido`, `fecha_nac`, `created`)
VALUES 
(12345678, 'Juan', 'Pérez', '1990-05-15', NOW()), -- Paciente
(87654321, 'María', 'Gómez', '1985-10-22', NOW()), -- Médico
(11223344, 'Carlos', 'López', '1978-03-30', NOW()), -- Administrativo
(22334455, 'Ana', 'Martínez', '1992-07-12', NOW()), -- Enfermero
(33445566, 'Pedro', 'Sánchez', '1980-11-25', NOW()); -- Técnico

-- Crear usuarios asociados a las personas
INSERT INTO `mydb`.`usuarios` (`username`, `password`, `email`, `created`, `id_tipo_usuario`, `RUT`)
VALUES 
('juanperez', 'password123', 'juan.perez@example.com', NOW(), 1, 12345678), -- Paciente
('mariagomez', 'password456', 'maria.gomez@example.com', NOW(), 2, 87654321), -- Médico
('carloslopez', 'password789', 'carlos.lopez@example.com', NOW(), 3, 11223344), -- Administrativo
('anamartinez', 'password101', 'ana.martinez@example.com', NOW(), 4, 22334455), -- Enfermero
('pedrosanchez', 'password112', 'pedro.sanchez@example.com', NOW(), 5, 33445566); -- Técnico

-- Crear citas
INSERT INTO `mydb`.`citas` (`fecha_cita`, `estado_cita`, `created`)
VALUES 
('2025-03-10 10:00:00', 'Pendiente', NOW()),
('2025-03-11 11:00:00', 'Aprobada', NOW()),
('2025-03-12 12:00:00', 'Rechazada', NOW()),
('2025-03-13 13:00:00', 'Pendiente', NOW()),
('2025-03-14 14:00:00', 'Aprobada', NOW());

-- Asociar citas a usuarios
INSERT INTO `mydb`.`citas_usuarios` (`id_citas`, `id_usuario`, `created`)
VALUES 
(1, 1, NOW()), -- Cita 1 asociada al usuario Juan Pérez (Paciente)
(2, 2, NOW()), -- Cita 2 asociada al usuario María Gómez (Médico)
(3, 3, NOW()), -- Cita 3 asociada al usuario Carlos López (Administrativo)
(4, 4, NOW()), -- Cita 4 asociada al usuario Ana Martínez (Enfermero)
(5, 5, NOW()); -- Cita 5 asociada al usuario Pedro Sánchez (Técnico)

-- Crear tipos de tratamiento
INSERT INTO `mydb`.`tipo_tratamiento` (`id_tipo_tratamiento`, `nombre_tipo_tratamiento`, `descripcion`, `created`)
VALUES 
(1, 'Fisioterapia', 'Tratamiento para rehabilitación física', NOW()),
(2, 'Cirugía', 'Intervención quirúrgica', NOW()),
(3, 'Medicación', 'Tratamiento con fármacos', NOW()),
(4, 'Terapia', 'Sesiones de terapia psicológica', NOW()),
(5, 'Rehabilitación', 'Programa de recuperación', NOW());

-- Crear tratamientos
INSERT INTO `mydb`.`tratamiento` (`id_tratamiento`, `fecha_tratamiento`, `created`, `id_tipo_tratamiento`)
VALUES 
(1, '2025-03-10 11:00:00', NOW(), 1), -- Fisioterapia
(2, '2025-03-11 12:00:00', NOW(), 2), -- Cirugía
(3, '2025-03-12 13:00:00', NOW(), 3), -- Medicación
(4, '2025-03-13 14:00:00', NOW(), 4), -- Terapia
(5, '2025-03-14 15:00:00', NOW(), 5); -- Rehabilitación

-- Crear consultas
INSERT INTO `mydb`.`consulta` (`id_consulta`, `motivo`, `diagnostico`, `fecha`, `created`, `id_tratamiento`, `id_citas`)
VALUES 
(1, 'Dolor de espalda', 'Espasmo muscular', '2025-03-10 10:30:00', NOW(), 1, 1), -- Consulta 1
(2, 'Fractura de brazo', 'Fractura expuesta', '2025-03-11 11:30:00', NOW(), 2, 2), -- Consulta 2
(3, 'Fiebre alta', 'Infección viral', '2025-03-12 12:30:00', NOW(), 3, 3), -- Consulta 3
(4, 'Ansiedad', 'Trastorno de ansiedad', '2025-03-13 13:30:00', NOW(), 4, 4), -- Consulta 4
(5, 'Lesión deportiva', 'Esguince de tobillo', '2025-03-14 14:30:00', NOW(), 5, 5); -- Consulta 5


-- -----------------------------------------------------
-- Consultas
-- -----------------------------------------------------

-- Seleccionar todos los usuarios registrados
SELECT * FROM `usuarios`;

-- Seleccionar todas las citas con estado "Pendiente"
SELECT * FROM `citas`
WHERE `estado_cita` = 'Pendiente';

-- Seleccionar consultas con diagnóstico "Espasmo muscular"
SELECT * FROM `consulta`
WHERE `diagnostico` = 'Espasmo muscular';

-- Seleccionar usuarios que son médicos (id_tipo_usuario = 2)
SELECT * FROM `usuarios`
WHERE `id_tipo_usuario` = 2;

-- Seleccionar todos los usuarios registrados
SELECT * FROM `consulta`;

-- -----------------------------------------------------
-- Modificar datos
-- -----------------------------------------------------

-- Cambiar el estado de una cita específica (id_citas = 1) a "Aprobada"
UPDATE `citas`
SET `estado_cita` = 'Aprobada'
WHERE `id_citas` = 1;

-- Cambiar el diagnóstico de una consulta específica (id_consulta = 1) a "Lesión muscular"
UPDATE `consulta`
SET `diagnostico` = 'Lesión muscular'
WHERE `id_consulta` = 1;

-- Cambiar el correo electrónico de un usuario específico (id_usuario = 1)
UPDATE `usuarios`
SET `email` = 'juan.perez.nuevo@example.com'
WHERE `id_usuario` = 1;

-- Cambiar la descripción de un tipo de tratamiento específico (id_tipo_tratamiento = 1)
UPDATE `tipo_tratamiento`
SET `descripcion` = 'Rehabilitación física y fortalecimiento muscular'
WHERE `id_tipo_tratamiento` = 1;

-- Cambiar la contraseña de un usuario específico (id_usuario = 2)
UPDATE `usuarios`
SET `password` = 'nuevapassword456'
WHERE `id_usuario` = 2;


-- -----------------------------------------------------
-- Borrar datos
-- -----------------------------------------------------

SET SQL_SAFE_UPDATES = 0; -- desactiva el modo seguro

-- Eliminar el usuario con id_usuario = 2
DELETE FROM `usuarios`
WHERE `id_usuario` = 2;

-- Eliminar la cita con id_citas = 3
DELETE FROM `citas`
WHERE `id_citas` = 3;

-- Eliminar el tipo de tratamiento con id_tipo_tratamiento = 4
DELETE FROM `tipo_tratamiento`
WHERE `id_tipo_tratamiento` = 4;

-- Eliminar la consulta con id_consulta = 2
DELETE FROM `consulta`
WHERE `id_consulta` = 2;

-- Eliminar la persona con RUT = 22334455
DELETE FROM `personas`
WHERE `RUT` = 22334455;