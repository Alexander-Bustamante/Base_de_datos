-- MySQL Script generated by MySQL Workbench
-- Thu Mar  6 10:12:30 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`tipo_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tipo_usuario` (
  `id_tipo_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre_tipo_usuario` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(100) NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`id_tipo_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`personas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`personas` (
  `RUT` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `fecha_nac` DATE NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`RUT`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`usuarios` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `created` DATETIME NOT NULL,
  `id_tipo_usuario` INT NOT NULL,
  `RUT` INT NOT NULL,
  PRIMARY KEY (`id_usuario`, `id_tipo_usuario`, `RUT`),
  CONSTRAINT `fk_usuarios_tipo_usuario`
    FOREIGN KEY (`id_tipo_usuario`)
    REFERENCES `mydb`.`tipo_usuario` (`id_tipo_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_personas1`
    FOREIGN KEY (`RUT`)
    REFERENCES `mydb`.`personas` (`RUT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_usuarios_tipo_usuario_idx` ON `mydb`.`usuarios` (`id_tipo_usuario` ASC) VISIBLE;

CREATE INDEX `fk_usuarios_personas1_idx` ON `mydb`.`usuarios` (`RUT` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`citas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`citas` (
  `id_citas` INT NOT NULL AUTO_INCREMENT,
  `fecha_cita` DATETIME NOT NULL,
  `estado_cita` VARCHAR(45) NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`id_citas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`citas_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`citas_usuarios` (
  `id_citas` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`id_citas`, `id_usuario`),
  CONSTRAINT `fk_citas_has_usuarios_citas1`
    FOREIGN KEY (`id_citas`)
    REFERENCES `mydb`.`citas` (`id_citas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_citas_has_usuarios_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `mydb`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_citas_has_usuarios_usuarios1_idx` ON `mydb`.`citas_usuarios` (`id_usuario` ASC) VISIBLE;

CREATE INDEX `fk_citas_has_usuarios_citas1_idx` ON `mydb`.`citas_usuarios` (`id_citas` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`tipo_tratamiento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tipo_tratamiento` (
  `id_tipo_tratamiento` INT NOT NULL,
  `nombre_tipo_tratamiento` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(100) NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`id_tipo_tratamiento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tratamiento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tratamiento` (
  `id_tratamiento` INT NOT NULL,
  `fecha_tratamiento` DATETIME NOT NULL,
  `created` DATETIME NOT NULL,
  `id_tipo_tratamiento` INT NOT NULL,
  PRIMARY KEY (`id_tratamiento`, `id_tipo_tratamiento`),
  CONSTRAINT `fk_tratamiento_tipo_tratamiento1`
    FOREIGN KEY (`id_tipo_tratamiento`)
    REFERENCES `mydb`.`tipo_tratamiento` (`id_tipo_tratamiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tratamiento_tipo_tratamiento1_idx` ON `mydb`.`tratamiento` (`id_tipo_tratamiento` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`consulta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`consulta` (
  `id_consulta` INT NOT NULL,
  `motivo` VARCHAR(45) NOT NULL,
  `diagnostico` VARCHAR(45) NOT NULL,
  `fecha` DATETIME NOT NULL,
  `created` DATETIME NOT NULL,
  `id_tratamiento` INT NOT NULL,
  `id_citas` INT NOT NULL,
  PRIMARY KEY (`id_consulta`, `id_tratamiento`, `id_citas`),
  CONSTRAINT `fk_consulta_tratamiento1`
    FOREIGN KEY (`id_tratamiento`)
    REFERENCES `mydb`.`tratamiento` (`id_tratamiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_consulta_citas1`
    FOREIGN KEY (`id_citas`)
    REFERENCES `mydb`.`citas` (`id_citas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_consulta_tratamiento1_idx` ON `mydb`.`consulta` (`id_tratamiento` ASC) VISIBLE;

CREATE INDEX `fk_consulta_citas1_idx` ON `mydb`.`consulta` (`id_citas` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

